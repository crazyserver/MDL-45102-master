{"version":3,"sources":["../src/default_notification_preferences.js"],"names":["define","$","SELECTORS","PROVIDER","PROVIDER_DISABLED","LOCK_SETTING","ENABLED_SETTING","ALL_SETTINGS","NotificationPreference","registerEventListeners","each","i","e","toggleDisableProviderSettings","bind","prototype","toggleLockSetting","isenabled","prop","closest","find","toggleClass","parentNode","on","target"],"mappings":"AAyBAA,OAAM,iDAAC,CAAC,QAAD,CAAD,CAEE,SACEC,CADF,CAEE,IAEFC,CAAAA,CAAS,CAAG,CACZC,QAAQ,CAAE,0CADE,CAEZC,iBAAiB,CAAE,yDAFP,CAGZC,YAAY,CAAE,yBAHF,CAIZC,eAAe,CAAE,0BAJL,CAKZC,YAAY,CAAE,mDALF,CAFV,CAaFC,CAAsB,CAAG,UAAW,CACpC,KAAKC,sBAAL,GAEAR,CAAC,CAACC,CAAS,CAACE,iBAAX,CAAD,CAA+BM,IAA/B,CAAoC,SAASC,CAAT,CAAYC,CAAZ,CAAe,CAC/C,KAAKC,6BAAL,CAAmCD,CAAnC,CACH,CAFmC,CAElCE,IAFkC,CAE7B,IAF6B,CAApC,CAGH,CAnBK,CA4BNN,CAAsB,CAACO,SAAvB,CAAiCC,iBAAjC,CAAqD,SAASJ,CAAT,CAAY,CAC7D,GAAIK,CAAAA,CAAS,CAAGhB,CAAC,CAACW,CAAD,CAAD,CAAKM,IAAL,CAAU,SAAV,KAAhB,CACAjB,CAAC,CAACW,CAAD,CAAD,CAAKO,OAAL,CAAa,IAAb,EAAmBC,IAAnB,CAAwBlB,CAAS,CAACI,eAAlC,EAAmDa,OAAnD,CAA2D,KAA3D,EAAkEE,WAAlE,CAA8E,aAA9E,CAA6FJ,CAA7F,CACH,CAHD,CAWAT,CAAsB,CAACO,SAAvB,CAAiCF,6BAAjC,CAAiE,SAASD,CAAT,CAAY,IACrEK,CAAAA,CAAS,CAAGhB,CAAC,CAACW,CAAD,CAAD,CAAKM,IAAL,CAAU,SAAV,KADyD,CAErEI,CAAU,CAAGrB,CAAC,CAACW,CAAD,CAAD,CAAKO,OAAL,CAAa,IAAb,CAFwD,CAIzEG,CAAU,CAACF,IAAX,CAAgBlB,CAAS,CAACK,YAA1B,EAAwCW,IAAxC,CAA6C,UAA7C,CAAyD,CAACD,CAA1D,CACH,CALD,CAYAT,CAAsB,CAACO,SAAvB,CAAiCN,sBAAjC,CAA0D,UAAW,CACjER,CAAC,CAACC,CAAS,CAACG,YAAX,CAAD,CAA0BkB,EAA1B,CAA6B,QAA7B,CAAuC,SAASX,CAAT,CAAY,CAC/C,KAAKI,iBAAL,CAAuBJ,CAAC,CAACY,MAAzB,CACH,CAFsC,CAErCV,IAFqC,CAEhC,IAFgC,CAAvC,EAIAb,CAAC,CAACC,CAAS,CAACC,QAAX,CAAD,CAAsBoB,EAAtB,CAAyB,QAAzB,CAAmC,SAASX,CAAT,CAAY,CAC3C,KAAKC,6BAAL,CAAmCD,CAAC,CAACY,MAArC,CACH,CAFkC,CAEjCV,IAFiC,CAE5B,IAF4B,CAAnC,CAGH,CARD,CAUA,MAAON,CAAAA,CACV,CAlEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the default settings for the list of notification types on the\n * notifications admin page\n *\n * @module     core_message/default_notification_preferences\n * @class      default_notification_preferences\n * @package    message\n * @copyright  2020 Pau Ferrer Oca√±a <pau@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n        ],\n        function(\n          $,\n        ) {\n\n    var SELECTORS = {\n        PROVIDER: '.defaultmessageoutputs .provider_enabled',\n        PROVIDER_DISABLED: '.defaultmessageoutputs .provider_enabled:not(:disabled)',\n        LOCK_SETTING: '.locked_message_setting',\n        ENABLED_SETTING: '.enabled_message_setting',\n        ALL_SETTINGS: '.locked_message_setting, .enabled_message_setting'\n    };\n\n    /**\n     * Constructor for the Preference.\n     */\n    var NotificationPreference = function() {\n        this.registerEventListeners();\n\n        $(SELECTORS.PROVIDER_DISABLED).each(function(i, e) {\n            this.toggleDisableProviderSettings(e);\n        }.bind(this));\n    };\n\n    /**\n      * Update the disable the enabled toggle on the notification setting.\n      *\n      * @method toggleDisableProviderSettings\n      * @param {object} element jQuery object that receives the event.\n      * @return {Promise}\n      */\n    NotificationPreference.prototype.toggleLockSetting = function(e) {\n        var isenabled = $(e).prop('checked') || false;\n        $(e).closest('td').find(SELECTORS.ENABLED_SETTING).closest('div').toggleClass('dimmed_text', isenabled);\n    };\n\n    /**\n      * Update the disable all notifications of the provider.\n      * @method toggleDisableProviderSettings\n      * @param {object} element jQuery object that receives the event.\n      * @return {Promise}\n      */\n    NotificationPreference.prototype.toggleDisableProviderSettings = function(e) {\n        var isenabled = $(e).prop('checked') || false;\n        var parentNode = $(e).closest('tr');\n\n        parentNode.find(SELECTORS.ALL_SETTINGS).prop('disabled', !isenabled);\n    };\n\n    /**\n      * Set up all of the event listeners for the NotificationPreference.\n      *\n      * @method registerEventListeners\n      */\n    NotificationPreference.prototype.registerEventListeners = function() {\n        $(SELECTORS.LOCK_SETTING).on('change', function(e) {\n            this.toggleLockSetting(e.target);\n        }.bind(this));\n\n        $(SELECTORS.PROVIDER).on('change', function(e) {\n            this.toggleDisableProviderSettings(e.target);\n        }.bind(this));\n    };\n\n    return NotificationPreference;\n});\n"],"file":"default_notification_preferences.min.js"}